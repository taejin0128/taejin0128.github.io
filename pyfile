uttcer.py

#!/usr/bin/env python3

import editdistance
import sys

ref = {}
hyp = {}
for line in open(sys.argv[1], "r"):
    key, *text = line.split()
    ref[key] = list(''.join(text))

for line in open(sys.argv[2], "r"):
    key, *text = line.split()
    hyp[key] = list(''.join(text))


N, E = 0, 0
for key in hyp:
    if key not in ref:
        raise Exception("no key '%s' in ref '%s'" %(key, sys.argv[1]))

    e = editdistance.eval(ref[key], hyp[key])
    n = len(ref[key])
    print(key, "%5.2f"%(e/n*100), e, n)

    N += n
    E += e

print("N= %d E= %d WER= %5.2f" %(N, E, E/N*100), file=sys.stderr)

uttcer.py

#!/usr/bin/env python3

import editdistance
import sys

ref = {}
hyp = {}
for line in open(sys.argv[1], "r"):
    key, *text = line.split()
    ref[key] = text

for line in open(sys.argv[2], "r"):
    key, *text = line.split()
    hyp[key] = text


N, E = 0, 0
for key in hyp:
    if key not in ref:
        raise Exception("no key '%s' in ref '%s'" %(key, sys.argv[1]))

    e = editdistance.eval(ref[key], hyp[key])
    n = len(ref[key])
    print(key, "%5.2f"%(e/n*100), e, n)

    N += n
    E += e

print("N= %d E= %d WER= %5.2f" %(N, E, E/N*100), file=sys.stderr)

wer.py

#!/usr/bin/env python
# coding: utf-8

import editdistance

ref_text = "오늘 서울의 날씨가 어때"
hyp_text = "음 오늘의 날씨 가 어때"

ref = ref_text.split()
hyp = hyp_text.split()
print(ref, hyp, sep='\n')

E = editdistance.eval(ref, hyp)
N = len(ref)
WER = E/N*100
print(f"N={N}, E={E}, WER={WER}")

ref = list(ref_text)
hyp = list(hyp_text)
print(ref, hyp, sep='\n')

E = editdistance.eval(ref, hyp)
N = len(ref)
CER = E/N*100
print(f"N={N}, E={E}, CER={CER}")

ref = list(''.join(ref_text.split()))
hyp = list(''.join(hyp_text.split()))
print(ref, hyp, sep='\n')

E = editdistance.eval(ref, hyp)
N = len(ref)
CER = E/N*100
print(f"N={N}, E={E}, CER={CER}")

